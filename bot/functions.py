from aiogram.fsm.context import FSMContext
from aiogram.types import Message, CallbackQuery

import bot.keyboards as kb
from bot.states import Task


# Main functions for command and callback queries
async def start_text(first_name):
	return '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, _%s_!\n\n\
	–Ø –≥–æ—Ç–æ–≤ —Å–ª—É–∂–∏—Ç—å –≤–∞–º –∫–∞–∫ –≤–∞—à –ª–∏—á–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –≤ –ø–ª–∞–Ω–∏—Ä–æ–≤–∫–µ –∑–∞–¥–∞—á –∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –≤–∞—à–∏—Ö —Ü–µ–ª–µ–π!\n\n\
	–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã –≤—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç—ã –Ω–∏–∂–µ üëá' % first_name


async def start(msg: Message = None, cb: CallbackQuery = None):
	if msg:
		await msg.answer(await start_text(msg.from_user.first_name), reply_markup=kb.main)
	else:
		await cb.message.edit_text('–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç—ã –Ω–∏–∂–µ üëá', reply_markup=kb.main)


async def my_tasks(msg: Message = None, cb: CallbackQuery = None):
	task_text = '–í–æ—Ç –≤–∞—à–∏ –∑–∞–¥–∞—á–∏ üëá'
	if msg:
		await msg.answer(task_text, reply_markup=await kb.get_user_tasks(msg.from_user.id))
	else:
		await cb.message.edit_text(task_text, reply_markup=await kb.get_user_tasks(cb.from_user.id))


async def add_task(msg: Message = None, cb: CallbackQuery = None, state: FSMContext = None):
	await state.set_state(Task.title)
	txt = '‚úèÔ∏è –í–≤–µ–¥–∏—Ç–µ –∑–∞–≥–æ–ª–æ–≤–æ–∫ –≤–∞—à–µ–π –∑–∞–¥–∞—á–∏.'
	if msg:
		await state.update_data(user_id=msg.from_user.id)
		await msg.answer(txt, reply_markup=kb.cancel)
	else:
		await state.update_data(user_id=cb.from_user.id)
		await cb.answer()
		await cb.message.answer(txt, reply_markup=kb.cancel)
